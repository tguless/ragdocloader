<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.20.xsd">

    <changeSet id="00009-01" author="docloader">
        <comment>Create function to handle multi-tenancy schema creation - part 1</comment>
        <sql splitStatements="false">
            CREATE OR REPLACE FUNCTION app.create_tenant_database(
                tenant_name TEXT, 
                tenant_subdomain TEXT
            ) RETURNS UUID 
            AS '
            DECLARE
                tenant_id UUID;
            BEGIN
                -- Generate UUID for new tenant
                tenant_id := gen_random_uuid();
                
                -- Create tenant schema (using tenant_subdomain for uniqueness)
                EXECUTE format(''CREATE SCHEMA IF NOT EXISTS tenant_%s'', tenant_subdomain);
                
                -- Grant privileges to the liquibase user
                EXECUTE format(''GRANT ALL PRIVILEGES ON SCHEMA tenant_%s TO liquibase_user'', tenant_subdomain);
                EXECUTE format(''ALTER DEFAULT PRIVILEGES IN SCHEMA tenant_%s GRANT ALL PRIVILEGES ON TABLES TO liquibase_user'', tenant_subdomain);
                EXECUTE format(''ALTER DEFAULT PRIVILEGES IN SCHEMA tenant_%s GRANT ALL PRIVILEGES ON SEQUENCES TO liquibase_user'', tenant_subdomain);
                
                -- Grant privileges to the application user
                EXECUTE format(''GRANT USAGE ON SCHEMA tenant_%s TO app_user'', tenant_subdomain);
                EXECUTE format(''ALTER DEFAULT PRIVILEGES IN SCHEMA tenant_%s GRANT ALL PRIVILEGES ON TABLES TO app_user'', tenant_subdomain);
                EXECUTE format(''ALTER DEFAULT PRIVILEGES IN SCHEMA tenant_%s GRANT ALL PRIVILEGES ON SEQUENCES TO app_user'', tenant_subdomain);
                
                RETURN tenant_id;
            END;
            ' LANGUAGE plpgsql;
        </sql>
    </changeSet>

</databaseChangeLog> 