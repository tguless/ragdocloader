version: '3.8'

services:
  # PostgreSQL for application data and multi-tenant user management
  postgres:
    image: postgres:15-alpine
    container_name: docloader-postgres
    environment:
      POSTGRES_PASSWORD: postgres_admin_password
      POSTGRES_USER: postgres_admin
      POSTGRES_DB: docloader
    ports:
      - "8098:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - docloader-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_admin -d docloader"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  # Neo4j for document relationship connections
  neo4j:
    image: neo4j:5-enterprise
    container_name: docloader-neo4j
    environment:
      NEO4J_AUTH: neo4j/neo4j_password
      NEO4J_ACCEPT_LICENSE_AGREEMENT: 'yes'
      NEO4J_apoc_export_file_enabled: 'true'
      NEO4J_apoc_import_file_enabled: 'true'
      NEO4J_apoc_import_file_use__neo4j__config: 'true'
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - docloader-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:7474"]
      interval: 30s
      timeout: 5s
      retries: 5

  # Redis for user session management
  redis:
    image: redis:7-alpine
    container_name: docloader-redis
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - docloader-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Weaviate vector database for document embeddings
  weaviate:
    image: semitechnologies/weaviate:1.21.2
    container_name: docloader-weaviate
    ports:
      - "8097:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - docloader-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 5s
      retries: 5

  # MinIO for local S3 mock
  minio:
    image: minio/minio:latest
    container_name: docloader-minio
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: minio_access_key
      MINIO_ROOT_PASSWORD: minio_secret_key
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - docloader-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 5s
      retries: 3

  # MinIO Client for bucket setup
  mc:
    image: minio/mc:latest
    container_name: docloader-mc
    depends_on:
      - minio
    volumes:
      - ./init-scripts/minio:/scripts
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 minio_access_key minio_secret_key;
      /scripts/create-buckets.sh;
      exit 0;
      "
    networks:
      - docloader-network

networks:
  docloader-network:
    driver: bridge

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis_data:
  weaviate_data:
  minio_data: 